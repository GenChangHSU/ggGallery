<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>ggGallery</title>
    <link>https://genchanghsu.github.io/ggGallery/</link>
    <atom:link href="https://genchanghsu.github.io/ggGallery/index.xml" rel="self" type="application/rss+xml"/>
    <description>A gallery of ggplots and beyond
</description>
    <generator>Distill</generator>
    <lastBuildDate>Fri, 20 Dec 2024 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Post #38. Creating ternary plots with `ggtern`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-12-20-post-38-creating-ternary-plots-with-ggtern</link>
      <description>


&lt;!-- Webpage style --&gt;
&lt;style&gt;
d-article a {
  color: #2780e3 !important;
  border-bottom: none !important;
}

d-article a:hover {
  color: #2780e3 !important;
  border-bottom: 2px solid !important;
}

d-byline {
  margin-left: -10% !important;
}

d-title {
  margin-left: -10%;
}

d-title h1{
  font-size: 45px;
  width: 130%;
}

d-article {
  margin-left: -10%;
}

p {
  width: 120%;
}

d-article h2 {
  width: 120%;
}

d-article h3 {
  width: 120%;
  font-size: 28px;
}

div.article-footer{
  width: 120%;
}

d-article div.sourceCode { 
  width: 120% !important;
}

d-article pre { 
  width: 120% !important;
}

div.l-body {
  width: 120% !important;
}

d-article table thead tr {
  height: 60px !important;
  width: 210px !important;
}

d-article table thead th {
  height: 60px !important;
  font-size: 22px !important;
  width: 210px !important;
}

d-article table tbody tr td {
  font-size: 21px !important;
  height: 60px !important;
  text-align: center !important;
  width: 210px !important;
}

div.l-body img {
    margin-right: 30% !important;
}

&lt;/style&gt;
&lt;head&gt;
&lt;base target="_blank"&gt;
&lt;/head&gt;
&lt;!-- Start of the article --&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Welcome to the end-of-year post! Really glad to conclude 2024 with
this one!&lt;/p&gt;
&lt;p&gt;You may (or may not) have heard of it, a &lt;a
href="https://en.wikipedia.org/wiki/Ternary_plot#"&gt;ternary plot&lt;/a&gt; is a
type of plot that displays the relative proportions of three variables
in an equilateral triangle. It’s a more specialized plot type and
certainly not the one you’ll see in everyday life, but it can be quite
handy when it comes to visualizing compositional data, for example, the
carbohydrates, protein, and fat composition of food items.&lt;/p&gt;
&lt;p&gt;I remember I first came across a ternary plot in an Ecology textbook
years ago when I was learning the classic &lt;a
href="https://meristemhorticulture.com/planted/tag/Grime%27s+triangle"&gt;Grime’s
CRS Triangle&lt;/a&gt; for depicting three major plant life strategies
(competitor, stress-tolerator, and ruderal) under different stress,
resource, and disturbance regimes. I was really fascinated with it, but
I didn’t know how to make one myself back then. Now I know, and I
thought it would be fun (and useful too!) to write a post on creating
ternary plots in ggplot. So let’s dive in!&lt;/p&gt;
&lt;h2 id="ternary-plots-with-ggtern"&gt;Ternary plots with
&lt;code&gt;ggtern&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The extension package &lt;a
href="https://cran.r-project.org/web/packages/ggtern/index.html"&gt;&lt;code&gt;ggtern&lt;/code&gt;&lt;/a&gt;
provides a suite of functions for creating ternary plots in ggplot.
We’ll start from the very basics, gradually add in some variation and
complexity, and finally finish by polishing the plot appearance.&lt;/p&gt;
&lt;h3 id="start-with-a-point-basic-ternary-plot"&gt;1. Start with a point:
basic ternary plot&lt;/h3&gt;
&lt;p&gt;First, let’s create a super simple ternary plot with just a single
point.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ggtern()&lt;/code&gt; is the master function here: it takes a
dataframe with three numeric columns, which are then mapped to the “x”,
“y”, and “z” aesthetic. If the three columns are not proportions but
instead raw values, the function will automatically rescale them so that
each row sums to 1.&lt;/p&gt;
&lt;p&gt;In the example below, I drew the lines connecting the point to the
sides using the function &lt;code&gt;geom_crosshair_tern()&lt;/code&gt;. I also
colored the axes and gridlines as well as added the arrows and labels
using the function &lt;code&gt;theme_rgbw()&lt;/code&gt;. These will help us better
understand what the plot is doing.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(tidyverse)
library(ggtern)

### Generate the data
ternary_df_point &amp;lt;- data.frame(x = 1, y = 2, z = 3)

### Create a basic ternary plot
ggtern(data = ternary_df_point, aes(x = x, y = y, z = z)) +  # the values will be rescaled 
  geom_point() +
  geom_crosshair_tern() +  # draw the lines connecting the point to the sides
  theme_rgbw()  # color the axes and gridlines &amp;amp; add the arrows and labels&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file466c6cb412fb_files/figure-html/unnamed-chunk-1-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;p&gt;If you’re new to ternary plots, you may be scratching your head about
how to read the plot. Well, it’s not that difficult once you understand
the principle: as indicated by the lines, the point corresponds to an
x-value of around 17% (1/6), a y-value of around 33% (2/6), and a
z-value of 50% (3/6).&lt;/p&gt;
&lt;p&gt;For plots that do not have the lines (which are most likely what
you’ll see in the wild), you can draw mental lines from the point to the
sides with the same angle as the numbers. So for example, the numbers on
the “x” side have an angle of 120°, so you can draw a line with an angle
of 120° from the point to the side and see what the corresponding value
is.&lt;/p&gt;
&lt;h3 id="from-point-to-line-ternary-line-chart"&gt;2. From point to line:
ternary line chart&lt;/h3&gt;
&lt;p&gt;Now that we have a better idea of how ternary plots work, we can take
a step further. Instead of just showing the individual points, we can
connect them to create a “ternary line chart”. This will be useful for
visualizing how composition changes over time.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Generate the data
ternary_df_line &amp;lt;- data.frame(x = seq(2, 9, length.out = 10)^2, 
                              y = seq(9, 2, length.out = 10)^2) %&amp;gt;% 
  mutate(z = 100 - x - y) %&amp;gt;% 
  rowid_to_column(var = &amp;quot;time&amp;quot;)

### Create a ternary line chart
ggtern(data = ternary_df_line, aes(x = x, y = y, z = z)) +
  geom_point(aes(color = time)) +
  geom_line(aes(color = time)) +
  scale_color_viridis_c(breaks = c(1, 10)) + 
  guides(color = guide_colorbar(reverse = T)) + 
  theme_arrownormal()  # add the arrows and labels without colors&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file466c6cb412fb_files/figure-html/unnamed-chunk-2-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="from-line-to-area-ternary-contour-plot"&gt;3. From line to area:
ternary contour plot&lt;/h3&gt;
&lt;p&gt;Next, we’ll go from a line to an area by adding density contours to
the ternary plot.&lt;/p&gt;
&lt;p&gt;As mentioned in the beginning, one application of ternary plots is
visualizing the nutrient composition of food, and this is what we’re
going to do now. We’ll use the &lt;code&gt;starbucks&lt;/code&gt; dataset from the
package &lt;code&gt;openintro&lt;/code&gt; to visualize the carbs, protein, and fat
content of different food items sold at starbucks.&lt;/p&gt;
&lt;p&gt;We can add density contours to the plot using the function
&lt;code&gt;stat_density_tern()&lt;/code&gt; and map the relative density “nlevel”
(computed via the 2D kernel density estimation) to the “fill” and
“alpha” aesthetics. We can adjust how close the contour lines are (i.e.,
the “steepness” of the slope) using the argument “binwidth”: a larger
binwidth produces sparser, smoother contour lines, whereas a smaller
binwidth produces denser, more detailed contour lines.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(openintro)  # for the dataset &amp;quot;starbucks&amp;quot;
data(&amp;quot;starbucks&amp;quot;)

### Create a ternary contour plot
ggtern(data = starbucks, aes(x = carb, y = protein, z = fat)) +
  stat_density_tern(geom = &amp;quot;polygon&amp;quot;, 
                    aes(fill = after_stat(nlevel), alpha = after_stat(nlevel)),
                    binwidth = 0.5) +   # binwidth controls how close the contour lines are
  stat_density_tern(geom = &amp;quot;polygon&amp;quot;,
                    color = &amp;quot;black&amp;quot;, 
                    fill = NA,
                    binwidth = 5,
                    linewidth = 0.1) + 
  geom_point(size = 1, alpha = 0.5) + 
  scale_fill_distiller(name = &amp;quot;Relative density&amp;quot;, 
                       palette = &amp;quot;Reds&amp;quot;, 
                       direction = 1,
                       breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) + 
  guides(alpha = &amp;quot;none&amp;quot;) + 
  theme_rgbw() + 
  theme(legend.position = c(1.05, 0.5),
        legend.title = element_text(hjust = 0.5),
        plot.margin = margin(r = 70))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file466c6cb412fb_files/figure-html/unnamed-chunk-3-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;p&gt;Seems like most Starbucks food is high in carbs and low in protein
(not surprising?!).&lt;/p&gt;
&lt;h3 id="from-area-to-bin-ternary-tribin-and-hexbin-plot"&gt;4. From area to
bin: ternary tribin and hexbin plot&lt;/h3&gt;
&lt;p&gt;When there are a ton of data points to show, we can run into the
issue of overplotting: the overlapping points will make the plot
unreadable. A solution is to divide the plot into triangular or
hexagonal bins, count the number of points in each bin, and color the
bins accordingly. These are easily done with
&lt;code&gt;geom_tri_tern()&lt;/code&gt; and &lt;code&gt;geom_hex_tern()&lt;/code&gt;. We can
use the argument “bins” to specify the number of bins along the
axes.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Generate the data
set.seed(1)
ternary_df_tri_hex &amp;lt;- data.frame(x = runif(5000), 
                                 y = runif(5000),
                                 z = runif(5000))

### Create a ternary tribin plot
ggtern(data = ternary_df_tri_hex, aes(x = x, y = y, z = z)) +
  geom_tri_tern(aes(fill = after_stat(count)),
                bins = 10) +  # number of bins along the axes
  scale_fill_viridis_c()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file466c6cb412fb_files/figure-html/unnamed-chunk-4-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Create a ternary hexbin plot
ggtern(data = ternary_df_tri_hex, aes(x = x, y = y, z = z)) +
  geom_hex_tern(aes(fill = after_stat(count)),
                bins = 20) + 
  scale_fill_viridis_c()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file466c6cb412fb_files/figure-html/unnamed-chunk-5-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="ternary-interpolation-plot"&gt;5. Ternary interpolation plot&lt;/h3&gt;
&lt;p&gt;One more cool thing we can do is creating a ternary interpolation
plot. We’ll first create a grid of points evenly distributed across the
plot area, each associated with a value (“height”). We can then use
&lt;code&gt;geom_interpolate_tern()&lt;/code&gt; to perform interpolation on these
data points and plot the interpolated values as contour lines. The
“breaks” argument allows us to specify the interpolated values at which
the contour lines are drawn.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Generate the data
ternary_df_interpolation &amp;lt;- expand_grid(x = seq(0, 100, 10),
                                        y = seq(0, 100, 10)) %&amp;gt;% 
  mutate(z = 100 - x - y) %&amp;gt;% 
  filter(z &amp;gt;= 0) %&amp;gt;% 
  mutate(height = x * y - 0.05 * z)

### Create a ternary interpolation plot
library(tidyterra)  # for the function &amp;quot;scale_color_hypso_c()&amp;quot;

ggtern(data = ternary_df_interpolation, aes(x = x, y = y, z = z, value = height)) +
  geom_interpolate_tern(aes(color = after_stat(level)),
                        base = &amp;quot;identity&amp;quot;,
                        breaks = seq(1, 3000, length.out = 30),  # the interpolated values to draw contour lines
                        size = 2) +
  geom_point(aes(color = height)) + 
  scale_color_hypso_c(name = &amp;quot;Height&amp;quot;, palette = &amp;quot;dem_screen&amp;quot;, limits = c(0, 3000)) +
  theme_bw() + 
  theme(legend.position = c(0.08, 0.7))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file466c6cb412fb_files/figure-html/unnamed-chunk-6-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="polish-the-plot-axis-labels-and-annotations"&gt;6. Polish the plot:
axis labels and annotations&lt;/h3&gt;
&lt;p&gt;To wrap things up, we’ll give the above ternary interpolation plot a
finishing touch by adjusting the axis labels and adding some
annotations:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### The original ternary interpolation plot
p_ternary_interpolation_original &amp;lt;- ggtern(data = ternary_df_interpolation, aes(x = x, y = y, z = z, value = height)) +
  geom_interpolate_tern(aes(color = after_stat(level)),
                        base = &amp;quot;identity&amp;quot;,
                        breaks = seq(1, 3000, length.out = 30),
                        size = 2) +
  geom_point(aes(color = height)) + 
  scale_color_hypso_c(name = &amp;quot;Height&amp;quot;, palette = &amp;quot;dem_screen&amp;quot;, limits = c(0, 3000)) +
  theme_bw() + 
  theme(legend.position = c(0.08, 0.7))

### The polished ternary interpolation plot
p_ternary_interpolation_polished &amp;lt;- p_ternary_interpolation_original + 
  
  # axis label text
  scale_L_continuous(name = &amp;quot;X-axis&amp;quot;,  # L for &amp;quot;left&amp;quot; axis label (i.e., x-axis)
                     breaks = seq(0, 1, 0.2),  
                     labels = seq(0, 1, 0.2)) +  
  scale_T_continuous(name = &amp;quot;Y-axis&amp;quot;,  # T for &amp;quot;top&amp;quot; axis label (i.e., y-axis)
                     breaks = seq(0, 1, 0.2),  
                     labels = seq(0, 1, 0.2)) +  
  scale_R_continuous(name = &amp;quot;Z-axis&amp;quot;,  # R for &amp;quot;right&amp;quot; axis label (i.e., z-axis)
                     breaks = seq(0, 1, 0.2),
                     labels = seq(0, 1, 0.2)) + 
  
  # axis label appearance
  theme(tern.axis.title.L = element_text(vjust = -2.25, hjust = -3.5, angle = 60),
        tern.axis.text.L = element_text(color = &amp;quot;black&amp;quot;),
        tern.axis.title.T = element_text(vjust = -1.5, hjust = -3.5, angle = 300),
        tern.axis.text.T = element_text(color = &amp;quot;black&amp;quot;),
        tern.axis.title.R = element_text(vjust = 2.5, hjust = 4.75, angle = 0),
        tern.axis.text.R = element_text(color = &amp;quot;black&amp;quot;)) + 
  
  # annotations
  annotate(geom = &amp;quot;point&amp;quot;, x = 0.5, y = 0.5, z = 0, shape = 17, size = 5, color = &amp;quot;brown&amp;quot;) + 
  annotate(geom = &amp;quot;curve&amp;quot;, x = 0.5, y = 0.45, z = 0.05, xend = 0.45, yend = 0.35, zend = 0.2,
           arrow = arrow(length = unit(0.03, &amp;quot;npc&amp;quot;)), color = &amp;quot;brown&amp;quot;) + 
  annotate(geom = &amp;quot;text&amp;quot;, x = 0.45, y = 0.35, z = 0.2, 
           label = &amp;quot;Peak&amp;quot;, size = 4, color = &amp;quot;brown&amp;quot;, hjust = -0.1)

p_ternary_interpolation_polished&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file466c6cb412fb_files/figure-html/unnamed-chunk-7-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;In this post, we created a wide variety of ternary plots, including a
basic ternary plot, a ternary line chart, a ternary contour plot, a
ternary tribin/hexbin plot, and a ternary interpolation plot. In the
end, we also learned how to customize the appearance of axis labels and
add annotations.&lt;/p&gt;
&lt;p&gt;To be perfectly honest with you, I’ve never used ternary plots in my
research and presentation in the past, not because I didn’t want to use
them, but because I didn’t really get the chance to use them. That said,
I believe I’ll encounter compositional data in the future, and by that
time I’ll certainly make some nice-looking ternary plots. I think you
should keep it in your data viz toolbox too!&lt;/p&gt;
&lt;p&gt;Hope you learn something useful from this post and don’t forget to
leave your comments and suggestions below if you have any!&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>a90d8ab0550b5f21b2b2f34ea1bcec19</distill:md5>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-12-20-post-38-creating-ternary-plots-with-ggtern</guid>
      <pubDate>Fri, 20 Dec 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-12-20-post-38-creating-ternary-plots-with-ggtern/../../homepage_images/Post38.png" medium="image" type="image/png" width="960" height="768"/>
    </item>
    <item>
      <title>Post #37. ggplot Map Series No.6: Cartograms in ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-10-08-post-37-ggplot-map-series-no6-cartograms-in-ggplots</link>
      <description>Come and learn how to create cartograms in ggplot!</description>
      <category>2024</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-10-08-post-37-ggplot-map-series-no6-cartograms-in-ggplots</guid>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-10-08-post-37-ggplot-map-series-no6-cartograms-in-ggplots/../../homepage_images/Post37.png" medium="image" type="image/png" width="1344" height="864"/>
    </item>
    <item>
      <title>Post #36. The nitty-gritty of dodging in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-08-02-post-36-the-nitty-gritty-of-dodging-in-ggplots</link>
      <description>Here come the useful tips for dodging in ggplots!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-08-02-post-36-the-nitty-gritty-of-dodging-in-ggplots</guid>
      <pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-08-02-post-36-the-nitty-gritty-of-dodging-in-ggplots/../../homepage_images/Post36.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Post #35. Creating 3D plots with plotly and rayshader</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-07-03-post-35-creating-3d-plots-with-plotly</link>
      <description>Bring your plots to the next dimension with `plotly` and `rayshader`!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-07-03-post-35-creating-3d-plots-with-plotly</guid>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-07-03-post-35-creating-3d-plots-with-plotly/../../homepage_images/Post35.png" medium="image" type="image/png" width="900" height="700"/>
    </item>
    <item>
      <title>Post #34. Connecting paired points in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-06-11-post-34-connecting-paired-points-by-groups-in-ggplots</link>
      <description>Check out the handy tips for connecting paired points in ggplots!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-06-11-post-34-connecting-paired-points-by-groups-in-ggplots</guid>
      <pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-06-11-post-34-connecting-paired-points-by-groups-in-ggplots/../../homepage_images/Post34.png" medium="image" type="image/png" width="1344" height="768"/>
    </item>
    <item>
      <title>Post #33. A "timely" plot—Visualizing time series data in ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-02-21-post-33-a-timely-plotvisualizing-time-series-in-ggplots</link>
      <description>Let's create an awesome time series chart in ggplot!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-02-21-post-33-a-timely-plotvisualizing-time-series-in-ggplots</guid>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-02-21-post-33-a-timely-plotvisualizing-time-series-in-ggplots/../../homepage_images/Post33.png" medium="image" type="image/png" width="1728" height="672"/>
    </item>
    <item>
      <title>Post #32. ggplot Map Series No.5: Scale bar and north arrow with `ggsn`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-12-24-post-32-ggplot-map-series-no5-map-annotation-with-ggsn</link>
      <description>Enhance your map with a scale bar and a north arrow using the package `ggsn`!</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-12-24-post-32-ggplot-map-series-no5-map-annotation-with-ggsn</guid>
      <pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-12-24-post-32-ggplot-map-series-no5-map-annotation-with-ggsn/../../homepage_images/Post32.png" medium="image" type="image/png" width="672" height="672"/>
    </item>
    <item>
      <title>Post #31. From static to dynamic—Create ggplot animations by hand</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-12-09-post-31-from-static-to-dynamic-animations-in-ggplots</link>
      <description>Read more here to bring your plots alive!</description>
      <category>2023</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-12-09-post-31-from-static-to-dynamic-animations-in-ggplots</guid>
      <pubDate>Sat, 09 Dec 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-12-09-post-31-from-static-to-dynamic-animations-in-ggplots/../../homepage_images/Post31.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>Post #30. ggplot Map Series No.4: Google Maps in R with `ggmap`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-10-26-post-30-ggplot-map-series-no4-creating-maps-with-ggmap</link>
      <description>A quick three-minute post on creating maps using Google Maps tiles with the package `ggmap`.</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-10-26-post-30-ggplot-map-series-no4-creating-maps-with-ggmap</guid>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-10-26-post-30-ggplot-map-series-no4-creating-maps-with-ggmap/../../homepage_images/Post30.png" medium="image" type="image/png" width="1152" height="1152"/>
    </item>
    <item>
      <title>Post #29. Bad weather today—Creating raincloud plots in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-09-09-post-29-creating-raincloud-plots-in-ggplots</link>
      <description>Come and learn how to create raincloud plots in ggplots to make your data "shine"!</description>
      <category>2023</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-09-09-post-29-creating-raincloud-plots-in-ggplots</guid>
      <pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-09-09-post-29-creating-raincloud-plots-in-ggplots/../../homepage_images/Post29.png" medium="image" type="image/png" width="864" height="960"/>
    </item>
    <item>
      <title>Post #28. Adding an external image to ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-08-22-post-28-adding-images-to-ggplots</link>
      <description>Come and learn four different ways of adding an external image to ggplots to decorate your figure!</description>
      <category>2023</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-08-22-post-28-adding-images-to-ggplots</guid>
      <pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-08-22-post-28-adding-images-to-ggplots/../../homepage_images/Post28.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #27. ggplot Map Series No.3: Visualizing the veins of Taiwan in ggplots with `osmdata`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-07-31-post-27-ggplot-map-series-no3-the-veins-of-taiwan</link>
      <description>In this post, we will create a map of the rivers in Taiwan in ggplots using the package `osmdata`.</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-07-31-post-27-ggplot-map-series-no3-the-veins-of-taiwan</guid>
      <pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-07-31-post-27-ggplot-map-series-no3-the-veins-of-taiwan/../../homepage_images/Post27.png" medium="image" type="image/png" width="710" height="518"/>
    </item>
    <item>
      <title>Post #26. ggplot Map Series No.2: Creating simple feature ggplot maps from shapefiles</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-05-24-post-26-ggplot-map-series-no2-simple-feature-maps</link>
      <description>Come and take a look at the nuts and bolts of creating simple feature maps from external shapefiles in ggplots!</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-05-24-post-26-ggplot-map-series-no2-simple-feature-maps</guid>
      <pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-05-24-post-26-ggplot-map-series-no2-simple-feature-maps/../../homepage_images/Post26.png" medium="image" type="image/png" width="729" height="768"/>
    </item>
    <item>
      <title>Post #25. ggplot Map Series No.1: Creating polygon maps in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-03-09-post-25-ggplot-map-series-no1-basic-ggplot-maps</link>
      <description>In this post, you will learn about how to create basic polygon maps and choropleth maps in ggplots.</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-03-09-post-25-ggplot-map-series-no1-basic-ggplot-maps</guid>
      <pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-03-09-post-25-ggplot-map-series-no1-basic-ggplot-maps/../../homepage_images/Post25.png" medium="image" type="image/png" width="1536" height="960"/>
    </item>
    <item>
      <title>Post #24. The spark between gt and ggplot2: Visualizing the top ten bird-window collision species in Taiwan</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-02-18-post-24-gt-and-ggplot-visualizing-bwc-in-taiwan</link>
      <description>An awesome integration of `gt` and `ggplot2` tells the story of the top ten bird-window collision species in Taiwan!</description>
      <category>2023</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-02-18-post-24-gt-and-ggplot-visualizing-bwc-in-taiwan</guid>
      <pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-02-18-post-24-gt-and-ggplot-visualizing-bwc-in-taiwan/../../homepage_images/Post24.png" medium="image" type="image/png" width="1934" height="3334"/>
    </item>
    <item>
      <title>Post #23. ggplot Legend Tips Series No.8: The nuts and bolts of legend item spacing</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-01-13-post-23-ggplot-legend-tips-series-no8-legend-item-spacing</link>
      <description>Here are all the nuts and bolts you need for working on legend item spacing!</description>
      <category>2023</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-01-13-post-23-ggplot-legend-tips-series-no8-legend-item-spacing</guid>
      <pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-01-13-post-23-ggplot-legend-tips-series-no8-legend-item-spacing/../../homepage_images/Post23.png" medium="image" type="image/png" width="1152" height="768"/>
    </item>
    <item>
      <title>Post #22. An epic ggplot journey through the glowing solar system</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-11-02-post-22-the-glowing-solar-system</link>
      <description>Ready for an epic ggplot journey through the glowing solar system? Let's go!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-11-02-post-22-the-glowing-solar-system</guid>
      <pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-11-02-post-22-the-glowing-solar-system/../../homepage_images/Post22.png" medium="image" type="image/png" width="1728" height="1728"/>
    </item>
    <item>
      <title>Post #21. Useful tips for mapping color and fill aesthetic in the same geom layer</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-10-22-post-21-useful-tips-for-mapping-color-and-fill-aesthetics-in-the-same-geom-layer</link>
      <description>In this quick post, I will show you how to use color and fill aesthetic together in the same geom layer to achieve the desired outcome!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-10-22-post-21-useful-tips-for-mapping-color-and-fill-aesthetics-in-the-same-geom-layer</guid>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-10-22-post-21-useful-tips-for-mapping-color-and-fill-aesthetics-in-the-same-geom-layer/../../homepage_images/Post21.png" medium="image" type="image/png" width="1152" height="768"/>
    </item>
    <item>
      <title>Post #20. ggplot Legend Tips Series No.7: Working on legends with theme()</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-10-01-post-20-ggplot-legend-tips-series-no7-working-on-legends-with-theme</link>
      <description>In this post, you will learn how to modify the appearance of ggplot legends using the arguments in `theme()`.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-10-01-post-20-ggplot-legend-tips-series-no7-working-on-legends-with-theme</guid>
      <pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-10-01-post-20-ggplot-legend-tips-series-no7-working-on-legends-with-theme/../../homepage_images/Post20.png" medium="image" type="image/png" width="1344" height="768"/>
    </item>
    <item>
      <title>Post #19. Go with the flow - alluvial diagrams in ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-09-10-post-19-go-with-the-flow-alluvial-plots-with-ggplot</link>
      <description>Let's make flowy alluvial diagrams in ggplot using the extension package `ggalluvial`!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-09-10-post-19-go-with-the-flow-alluvial-plots-with-ggplot</guid>
      <pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-09-10-post-19-go-with-the-flow-alluvial-plots-with-ggplot/../../homepage_images/Post19.png" medium="image" type="image/png" width="1536" height="864"/>
    </item>
    <item>
      <title>Post #18. Bump charts with ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-08-01-post-18-bump-charts-with-ggplot</link>
      <description>Come and learn how to create nice bump charts with ggplot!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-08-01-post-18-bump-charts-with-ggplot</guid>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-08-01-post-18-bump-charts-with-ggplot/../../homepage_images/Post18.png" medium="image" type="image/png" width="1728" height="960"/>
    </item>
    <item>
      <title>Post #17. ggplot Legend Tips Series No.6: Working on continuous legends with scale_XX functions</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-07-02-post-17-ggplot-legend-tips-series-no6-working-on-continuous-legends-with-scalexx-functions</link>
      <description>In this post, you will learn how to modify the appearance of continuous legends in ggplots using `scale_XX` family of functions.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-07-02-post-17-ggplot-legend-tips-series-no6-working-on-continuous-legends-with-scalexx-functions</guid>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-07-02-post-17-ggplot-legend-tips-series-no6-working-on-continuous-legends-with-scalexx-functions/../../homepage_images/Post17.png" medium="image" type="image/png" width="960" height="672"/>
    </item>
    <item>
      <title>Post #16. ggplot Legend Tips Series No.5: Working on discrete legends with scale_XX functions</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-06-09-post-16-ggplot-legend-tips-series-no5-working-on-discrete-legends-with-scalexx-functions</link>
      <description>In this post, you will learn how to modify the appearance of discrete legends in ggplots using `scale_XX` family of functions.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-06-09-post-16-ggplot-legend-tips-series-no5-working-on-discrete-legends-with-scalexx-functions</guid>
      <pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-06-09-post-16-ggplot-legend-tips-series-no5-working-on-discrete-legends-with-scalexx-functions/../../homepage_images/Post16.png" medium="image" type="image/png" width="1152" height="672"/>
    </item>
    <item>
      <title>Post #15. Manipulating the axes for individual facets with `tidytext` and `ggh4x`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-05-12-post-15-manipulating-axis-scales-for-individual-facets</link>
      <description>Bothered by the hassle of manipulating the axes for individual facets? This is the post for you!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-05-12-post-15-manipulating-axis-scales-for-individual-facets</guid>
      <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-05-12-post-15-manipulating-axis-scales-for-individual-facets/../../homepage_images/Post15.png" medium="image" type="image/png" width="960" height="768"/>
    </item>
    <item>
      <title>Post #14. Multiple color scales in one ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-04-24-post-14-multiple-color-scales-in-one-ggplot</link>
      <description>Using different color scales for multiple geom layers in one ggplot with `ggnewscale` and `relayer`</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-04-24-post-14-multiple-color-scales-in-one-ggplot</guid>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-04-24-post-14-multiple-color-scales-in-one-ggplot/../../homepage_images/Post14.png" medium="image" type="image/png" width="1056" height="672"/>
    </item>
    <item>
      <title>Post #13. ggplot Legend Tips Series No.4: Merging ggplot legends</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-03-02-post-13-ggplot-legend-tips-series-no4-merging-ggplot-legends</link>
      <description>Come and learn two handy tips to merge two ggplot legends into one!</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-03-02-post-13-ggplot-legend-tips-series-no4-merging-ggplot-legends</guid>
      <pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-03-02-post-13-ggplot-legend-tips-series-no4-merging-ggplot-legends/../../homepage_images/Post13.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #12. ggplot Legend Tips Series No.3: Three ways to turn off the legends in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-02-05-post-12-ggplot-legend-tips-series-no3-three-ways-to-turn-off-ggplot-legends</link>
      <description>Come and learn three handy tips to turn off the legends in ggplots!</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-02-05-post-12-ggplot-legend-tips-series-no3-three-ways-to-turn-off-ggplot-legends</guid>
      <pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-02-05-post-12-ggplot-legend-tips-series-no3-three-ways-to-turn-off-ggplot-legends/../../homepage_images/Post12.png" medium="image" type="image/png" width="768" height="576"/>
    </item>
    <item>
      <title>Post #11. ggplot Legend Tips Series No.2: Working on continuous legends with guides()</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-02-01-post-11-ggplot-legend-tips-series-no2-working-on-continuous-legends-with-guides</link>
      <description>In this post, you will learn how to tweak the appearance of continuous legends in ggplots with `guides()`.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-02-01-post-11-ggplot-legend-tips-series-no2-working-on-continuous-legends-with-guides</guid>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-02-01-post-11-ggplot-legend-tips-series-no2-working-on-continuous-legends-with-guides/../../homepage_images/Post11.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #10. ggplot Legend Tips Series No.1: Working on discrete legends with guides()</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-01-28-post-10-ggplot-legend-tips-series-no1-working-on-discrete-scale-legends-with-guides</link>
      <description>In this post, you will learn how to tweak the appearance of discrete legends in ggplots with `guides()`.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-01-28-post-10-ggplot-legend-tips-series-no1-working-on-discrete-scale-legends-with-guides</guid>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-01-28-post-10-ggplot-legend-tips-series-no1-working-on-discrete-scale-legends-with-guides/../../homepage_images/Post10.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #9. Arrange multiple ggplots on one graphic device</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots</link>
      <description>Come and learn two methods to arrange multiple ggplots on one graphic device.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots</guid>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots/../../homepage_images/Post9.png" medium="image" type="image/png" width="1152" height="1152"/>
    </item>
    <item>
      <title>Post #8. Pokemon phylogeny with ggdendro</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro</link>
      <description>Create a Pokemon phylogenetic tree in ggplot with the extension package ggdendro.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro</guid>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro/../../homepage_images/Post8.png" medium="image" type="image/png" width="960" height="960"/>
    </item>
    <item>
      <title>Post #7. Customize the axis scales for individual ggplot facets</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets</link>
      <description>Come and learn how to customize the axis scales (axis limits, tick breaks, and tick labels) for individual ggplot facets!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets</guid>
      <pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets/../../homepage_images/Post7.png" medium="image" type="image/png" width="1152" height="768"/>
    </item>
    <item>
      <title>Post #6. Play good music for your data - violin plots with ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot</link>
      <description>Visualize data distributions using violin plots with ggplot.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot</guid>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot/../../homepage_images/Post6.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #5. Awesome text displays with ggtext</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext</link>
      <description>Enhance text displays in your ggplots with the extension package ggtext!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext</guid>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext/../../homepage_images/Post5.png" medium="image" type="image/png" width="1152" height="1152"/>
    </item>
    <item>
      <title>Post #4. Consistent colors of the same factor levels across figures</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures</link>
      <description>In this post, I will show you a simple trick to keep the colors of the same factor levels consistent across different ggplot figures.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures</guid>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures/../../homepage_images/Post4.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #3. Pie charts with ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot</link>
      <description>Want to know how to create effective pie charts with ggplot? Dig in to learn more!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot</guid>
      <pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot/../../homepage_images/Post3.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Guest Post #1. Communicating the ESSENCE of your data</title>
      <dc:creator>William Ou</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data</link>
      <description>Visualizing multi-dimensional and dynamic data can be challenging. In this post, I will show how you can better communicate these features with interactive plots and animations.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data</guid>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data/../../homepage_images/Guest_post1.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>Post #2. Three ways to create log axes in ggplots: which one should you use?</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use</link>
      <description>This post shows you three different ways to create log axes in ggplots and provides some suggestions on which method to use for your figures.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use</guid>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use/../../homepage_images/Post2.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #1. Center long legend titles in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots</link>
      <description>In this post, I will show you a simple quick hack to center long legend titles in ggplots without bothering gtables and grobs.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots</guid>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots/../../homepage_images/Post1.png" medium="image" type="image/png" width="1152" height="672"/>
    </item>
  </channel>
</rss>
