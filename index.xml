<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>ggGallery</title>
    <link>https://genchanghsu.github.io/ggGallery/</link>
    <atom:link href="https://genchanghsu.github.io/ggGallery/index.xml" rel="self" type="application/rss+xml"/>
    <description>A gallery of ggplots and beyond
</description>
    <generator>Distill</generator>
    <lastBuildDate>Mon, 20 Dec 2021 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Post #9. Arrange multiple ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots</link>
      <description>


&lt;!-- Webpage style --&gt;
&lt;style&gt;
d-article a {
    color: #2780e3 !important;
    border-bottom: none !important;
}

d-article a:hover {
    color: #2780e3 !important;
    border-bottom: 2px solid !important;
}

d-byline {
    margin-left: -10% !important;
}

d-title {
    margin-left: -10%;
}

d-title h1{
    font-size: 45px;
    width: 130%;
}

d-article {
    margin-left: -10%;
}

p {
    width: 120%;
}

d-article h2 {
    width: 120%;
}

d-article h3 {
  width: 120%;
  font-size: 28px;
}

div.article-footer{
    width: 120%;
}

d-article div.sourceCode { 
    width: 120% !important;
}

d-article pre { 
    width: 120% !important;
}

div.l-body {
    width: 120% !important;
}

&lt;/style&gt;
&lt;!-- Start of the article --&gt;
&lt;p&gt;Feel excited to re-blog after taking a one-and-a-half months break. Quite shocked at my rusty writing skills. I think I really need to brush up a bit! So this time we will just do a simple post as a warm-up.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Sometimes we have a set of related plots and we would like to arrange them on a same page or as a single graphic. Instead of doing this manually (e.g., using MS PowerPoint), we can actually achieve the job in R. This not only streamlines the figure generation process but also makes it fully reproducible so that others can get the exact figure as yours after running your code.&lt;/p&gt;
&lt;p&gt;In this post, I will show you two methods for layout of multiple ggplots: (1) using the function &lt;code&gt;ggarrange()&lt;/code&gt; in the package &lt;a href="https://rpkgs.datanovia.com/ggpubr/index.html"&gt;ggpubr&lt;/a&gt;, and (2) using the function &lt;code&gt;draw_plot()&lt;/code&gt; and its families in the package &lt;a href="https://wilkelab.org/cowplot/index.html"&gt;cowplot&lt;/a&gt;. Let’s jump right in!&lt;/p&gt;
&lt;h2 id="method-1.-using-ggarrange-in-the-package-ggpubr"&gt;Method 1. Using &lt;code&gt;ggarrange()&lt;/code&gt; in the package &lt;code&gt;ggpubr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggarrange()&lt;/code&gt; is a convenient function for laying out multiple plots on a same device. It also allows the users to make some adjustments, for example, adding panel labels and aligning the plots. The package also offers another function for adding text annotations to the figure. We’ll go through these one by one in the following.&lt;/p&gt;
&lt;p&gt;To begin with, let’s create some plots using the famous &lt;code&gt;iris&lt;/code&gt; data set:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(tidyverse)

### 1. A scatterplot of Sepal.Length vs. Sepal.Width
P1 &amp;lt;- ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + 
  geom_point() + 
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;, name = &amp;quot;&amp;quot;) + 
  theme_classic(base_size = 14)

### 2. Density plot of Sepal.Length
P2 &amp;lt;- ggplot(iris, aes(x = Sepal.Length, color = Species)) + 
  geom_density(aes(y = ..scaled..)) + 
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;, name = &amp;quot;&amp;quot;) + 
  theme_classic(base_size = 14) + 
  scale_y_continuous(breaks = seq(0, 1, 0.2))

### 3. Density plot of Sepal.Width
P3 &amp;lt;- ggplot(iris, aes(x = Sepal.Width, color = Species)) + 
  geom_density(aes(y = ..scaled..)) + 
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;, name = &amp;quot;&amp;quot;) + 
  theme_classic(base_size = 14) + 
  scale_y_continuous(breaks = seq(0, 1, 0.2)) +
  coord_flip()
  
P1
P2
P3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file210c568a5688_files/figure-html/unnamed-chunk-1-1.png" width="45%" /&gt;&lt;img src="file210c568a5688_files/figure-html/unnamed-chunk-1-2.png" width="45%" /&gt;&lt;img src="file210c568a5688_files/figure-html/unnamed-chunk-1-3.png" width="45%" /&gt;&lt;/p&gt;
&lt;h3 id="basic-layout"&gt;1. Basic layout&lt;/h3&gt;
&lt;p&gt;Now, say, you would like to place the density plots at the top (for Sepal.Length) and right (for Sepal.Width) of the scatterplot to show their distributions. We can do this by passing the above ggplot objects (P1, P2 and P3) into &lt;code&gt;ggarrange()&lt;/code&gt; and specify the layout designs (the numbers of rows and columns along with their widths and heights).&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(ggpubr)

P_arrg_1 &amp;lt;- ggarrange(P2 + labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;),  # remove the axis labels
                      NULL,  # you can add an empty plot using &amp;quot;NULL&amp;quot; to create a white space in the figure
                      P1, 
                      P3 + labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;), 
                      nrow = 2, 
                      ncol = 2,
                      widths = c(0.65, 0.35),  # the widths of the two columns
                      heights = c(0.35, 0.65),  # the heights of the two rows
                      common.legend = T)  # use the same legend for all plots

P_arrg_1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file210c568a5688_files/figure-html/unnamed-chunk-2-1.png" width="70%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="panel-labels"&gt;2. Panel labels&lt;/h3&gt;
&lt;p&gt;After getting our basic layout done, we can then add some panel labels to the plots and adjust their x and y positions:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;P_arrg_2 &amp;lt;- ggarrange(P2 + labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;),  
                      NULL,
                      P1, 
                      P3 + labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;), 
                      nrow = 2, 
                      ncol = 2,
                      widths = c(0.65, 0.35),  
                      heights = c(0.35, 0.65),  
                      common.legend = T,
                      labels = c(&amp;quot;(a)&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;(b)&amp;quot;, &amp;quot;(c)&amp;quot;),  # the panel labels for each plot (also an empty string for the &amp;quot;NULL&amp;quot; plot)
                      label.x = c(0, 0, 0, 0),  # the x positions of the labels
                      label.y = c(1.1, 1.1, 1.1, 1.1))  # the y positions of the labels

P_arrg_2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file210c568a5688_files/figure-html/unnamed-chunk-3-1.png" width="70%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="text-annotations"&gt;3. Text annotations&lt;/h3&gt;
&lt;p&gt;Sometimes we might want to add some text/labels to the figure. &lt;code&gt;ggpubr&lt;/code&gt; provides a handy function &lt;code&gt;annotate_figure()&lt;/code&gt; for this: simply create a &lt;code&gt;grob&lt;/code&gt; object using &lt;code&gt;text_grob()&lt;/code&gt; (you can also specify the x and y positions of the text as well as its horizontal and vertical adjustments) and pass it to the function.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;P_arrg_3 &amp;lt;- annotate_figure(P_arrg_2,
                            top = text_grob(&amp;quot;Visualizing Iris Data&amp;quot;, 
                                            color = &amp;quot;blue&amp;quot;, 
                                            face = &amp;quot;bold.italic&amp;quot;, 
                                            size = 14, 
                                            x = 0.825, 
                                            y = 1, 
                                            vjust = 10))

P_arrg_3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file210c568a5688_files/figure-html/unnamed-chunk-4-1.png" width="70%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="plot-alignment"&gt;4. Plot alignment&lt;/h3&gt;
&lt;p&gt;Another nice functionality in &lt;code&gt;ggarrange()&lt;/code&gt; is that it can automatically align the plot panels. This is particularly useful when the plots have different margin sizes (e.g., due to different label lengths). Let’s take a look at an example:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### A scatterplot of Sepal.Length vs. Sepal.Width
P4 &amp;lt;- ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + 
  geom_point(show.legend = F) + 
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;, name = &amp;quot;&amp;quot;) + 
  theme_classic(base_size = 14)

### Density plot of Sepal.Length
P5 &amp;lt;- ggplot(iris, aes(x = Sepal.Length, color = Species)) + 
  geom_density(aes(y = ..scaled..), show.legend = F) + 
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;, name = &amp;quot;&amp;quot;) +
  labs(x = NULL, y = NULL) +
  theme_classic(base_size = 14) 

### The y-axes of the two plots are not aligned by default
ggarrange(P5, 
          P4,
          nrow = 2,
          heights = c(0.3, 0.7))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file210c568a5688_files/figure-html/unnamed-chunk-5-1.png" width="50%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### The y-axes of the two plots are now aligned
ggarrange(P5, 
          P4,
          nrow = 2,
          heights = c(0.3, 0.7),
          align = &amp;quot;v&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file210c568a5688_files/figure-html/unnamed-chunk-6-1.png" width="50%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h2 id="method-2."&gt;Method 2.&lt;/h2&gt;
&lt;p&gt;cowplot drawplot drawtext drawgrob drawimage&lt;/p&gt;
&lt;p&gt;Add any thing to the plot window to anywhere as you wish&lt;/p&gt;
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;To recap, we&lt;/p&gt;
&lt;p&gt;The first method, &lt;code&gt;ggarrange()&lt;/code&gt; is . So if you do not have complex layout, this is perhaps the go-to method&lt;/p&gt;
&lt;p&gt;The second method, &lt;code&gt;draw_plot()&lt;/code&gt;, allows you to arrange any plots at any positions with any size. This is more flexible, but of course it might take a while to tweak the plots. So save this method for the time when you need to create a complex multiple layout plot.&lt;/p&gt;
&lt;p&gt;The most important thing is to have an idea of what your figure should look like. Perhaps draw it down on a paper. After you get an idea, yuo can then proceed and make the individual plots, and design the layout, and finally tweak the figure and do some additional decorations.&lt;/p&gt;
&lt;p&gt;Hope you enjoy the reading and don’t forget to leave your comments and suggestions below if you have any!&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>7e292a800db49bdbba626427c2dc7df4</distill:md5>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots</guid>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots/post-9-arrange-multiple-ggplots_files/figure-html5/unnamed-chunk-1-1.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #8. Pokemon phylogeny with ggdendro</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro</link>
      <description>Create a Pokemon phylogenetic tree in ggplot with the extension package ggdendro.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro</guid>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro/../../homepage_images/Post8.png" medium="image" type="image/png" width="960" height="960"/>
    </item>
    <item>
      <title>Post #7. Customize the axis scales for individual ggplot facets</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets</link>
      <description>Come and learn how to customize the axis scales (axis limits, tick breaks, and tick labels) for individual ggplot facets!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets</guid>
      <pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets/../../homepage_images/Post7.png" medium="image" type="image/png" width="1152" height="768"/>
    </item>
    <item>
      <title>Post #6. Play good music for your data - violin plots with ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot</link>
      <description>Visualize data distributions using violin plots with ggplot.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot</guid>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot/../../homepage_images/Post6.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #5. Awesome text displays with ggtext</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext</link>
      <description>Enhance text displays in your ggplots with the extension package ggtext!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext</guid>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext/../../homepage_images/Post5.png" medium="image" type="image/png" width="1152" height="1152"/>
    </item>
    <item>
      <title>Post #4. Consistent colors of the same factor levels across figures</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures</link>
      <description>In this post, I will show you a simple trick to keep the colors of the same factor levels consistent across different ggplot figures.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures</guid>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures/../../homepage_images/Post4.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #3. Pie charts with ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot</link>
      <description>Want to know how to create effective pie charts with ggplot? Dig in to learn more!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot</guid>
      <pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot/../../homepage_images/Post3.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Guest Post #1. Communicating the ESSENCE of your data</title>
      <dc:creator>William Ou</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data</link>
      <description>Visualizing multi-dimensional and dynamic data can be challenging. In this post, I will show how you can better communicate these features with interactive plots and animations.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data</guid>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data/../../homepage_images/Guest_post1.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>Post #2. Three ways to create log axes in ggplots: which one should you use?</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use</link>
      <description>This post shows you three different ways to create log axes in ggplots and provides some suggestions on which method to use for your figures.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use</guid>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use/../../homepage_images/Post2.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #1. Center long legend titles in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots</link>
      <description>In this post, I will show you a simple quick hack to center long legend titles in ggplots without bothering gtables and grobs.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots</guid>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots/../../homepage_images/Post1.png" medium="image" type="image/png" width="1152" height="672"/>
    </item>
  </channel>
</rss>
