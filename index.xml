<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>ggGallery</title>
    <link>https://genchanghsu.github.io/ggGallery/</link>
    <atom:link href="https://genchanghsu.github.io/ggGallery/index.xml" rel="self" type="application/rss+xml"/>
    <description>A gallery of ggplots and beyond
</description>
    <generator>Distill</generator>
    <lastBuildDate>Mon, 05 May 2025 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Post #41. ggplot Map Series No.7: Spatial raster maps in ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2025-05-05-post-41-ggplot-map-series-no7-spatial-raster-mapping-in-ggplot</link>
      <description>


&lt;!-- Webpage style --&gt;
&lt;style&gt;
d-article a {
  color: #2780e3 !important;
  border-bottom: none !important;
}

d-article a:hover {
  color: #2780e3 !important;
  border-bottom: 2px solid !important;
}

d-byline {
  margin-left: -10% !important;
}

d-title {
  margin-left: -10%;
}

d-title h1{
  font-size: 45px;
  width: 130%;
}

d-article {
  margin-left: -10%;
}

p {
  width: 120%;
}

d-article h2 {
  width: 120%;
}

d-article h3 {
  width: 120%;
  font-size: 28px;
}

div.article-footer{
  width: 120%;
}

d-article div.sourceCode { 
  width: 120% !important;
}

d-article pre { 
  width: 120% !important;
}

div.l-body {
  width: 120% !important;
}

d-article table thead tr {
  height: 60px !important;
  width: 210px !important;
}

d-article table thead th {
  height: 60px !important;
  font-size: 22px !important;
  width: 210px !important;
}

d-article table tbody tr td {
  font-size: 21px !important;
  height: 60px !important;
  text-align: center !important;
  width: 210px !important;
}

div.l-body img {
    margin-right: 30% !important;
}

&lt;/style&gt;
&lt;head&gt;
&lt;base target="_blank"&gt;
&lt;/head&gt;
&lt;!-- Start of the article --&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Welcome to a new post in my ggplot Map Series! So far, we’ve covered
&lt;a
href="https://genchanghsu.github.io/ggGallery/posts/2023-03-09-post-25-ggplot-map-series-no1-basic-ggplot-maps/"&gt;polygon
maps&lt;/a&gt;, &lt;a
href="https://genchanghsu.github.io/ggGallery/posts/2023-05-24-post-26-ggplot-map-series-no2-simple-feature-maps/"&gt;vector
maps using shapfiles&lt;/a&gt;, and &lt;a
href="https://genchanghsu.github.io/ggGallery/posts/2023-10-26-post-30-ggplot-map-series-no4-creating-maps-with-ggmap/"&gt;Google
Maps&lt;/a&gt;. Today, we’re going to look at yet another type of maps: raster
maps, which are maps created from raster data. Specifically, we’ll be
working with &lt;a href="https://en.wikipedia.org/wiki/GeoTIFF"&gt;GeoTIFF&lt;/a&gt;
files. These are special TIFF files embedded with georeferencing
information such as map projection, coordinate systems, ellipsoids, and
datums. They are commonly used in satellite imagery, aerial photography,
and digitized maps that can be used for GIS analysis (e.g., climatic
maps). So without further ado, let’s get started!&lt;/p&gt;
&lt;h2 id="spatial-raster-maps-in-ggplot"&gt;Spatial raster maps in
ggplot&lt;/h2&gt;
&lt;h3 id="data-preparation"&gt;1. Data preparation&lt;/h3&gt;
&lt;p&gt;The data we’ll be using are the &lt;a
href="https://www.worldclim.org/data/worldclim21.html"&gt;WorldClim
1970-2000 5-km&lt;sup&gt;2&lt;/sup&gt; global monthly precipitation data&lt;/a&gt;, which
contain 12 GeoTIFF files for each month. These GeoTIFF files can be read
into R via the function &lt;code&gt;rast()&lt;/code&gt; from the package
&lt;code&gt;terra&lt;/code&gt; as “SpatRaster” objects.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(tidyverse)
library(terra)

### Download the WorldClim data
download.file(&amp;quot;https://geodata.ucdavis.edu/climate/worldclim/2_1/base/wc2.1_2.5m_prec.zip&amp;quot;,
              destfile = &amp;quot;./WorldClim_Precipitation.zip&amp;quot;)
unzip(&amp;quot;WorldClim_Precipitation.zip&amp;quot;, exdir = &amp;quot;WorldClim&amp;quot;)

### Read the GeoTIFF files
worldclim_filepath &amp;lt;- list.files(&amp;quot;./WorldClim&amp;quot;, pattern = &amp;quot;.tif&amp;quot;) %&amp;gt;% 
  str_c(&amp;quot;./WorldClim/&amp;quot;, .)
worldclim_precipitation_raster &amp;lt;- map(worldclim_filepath, rast)  # rast() reads the GeoTIFF files as &amp;quot;SpatRaster&amp;quot; objects&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="create-a-basic-raster-map"&gt;2. Create a basic raster map&lt;/h3&gt;
&lt;p&gt;The object “worldclim_precipitation_raster” contains 12 lists of
SpatRaster objects, each of which has x- and y-coordinates as well as a
layer for the precipitation. Sometimes, a SpatRaster object may have
more than one layer, and we can get all the layer names using
&lt;code&gt;names()&lt;/code&gt; from the package &lt;code&gt;tidyterra&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let’s make a map of the average global precipitation in January (the
first list in “worldclim_precipitation_raster”). To create a map from a
SpatRaster object, we can use the function
&lt;code&gt;geom_spatraster()&lt;/code&gt; from the package &lt;code&gt;tidyterra&lt;/code&gt;.
This function is a wrapper for &lt;code&gt;geom_raster()&lt;/code&gt;. In this
example, we only have one layer, so it’s not necessarily to specify the
layer for the “fill” aesthetic, but we need to do so if there are
multiple layers. We’ll also draw the country boundaries from the package
&lt;code&gt;rnaturalearth&lt;/code&gt; on the map.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Get country boundaries
library(rnaturalearth)
country_boundary &amp;lt;- ne_countries(type = &amp;quot;countries&amp;quot;, scale = &amp;quot;small&amp;quot;)

### Create a palette for the precipitation
library(colorspace)
col_pal &amp;lt;- sequential_hcl(n = 7, palette = &amp;quot;BluYl&amp;quot;, rev = T)

### Get raster layer names
library(tidyterra)
names(worldclim_precipitation_raster[[1]])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;wc2.1_2.5m_prec_01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Create a map
ggplot() +
  geom_spatraster(data = worldclim_precipitation_raster[[1]]) +  # January precipitation
  geom_sf(data = country_boundary, fill = NA, color = &amp;quot;black&amp;quot;, size = 0.8) +  # country boundaries
  scale_fill_gradientn(colors = col_pal[c(1, 4, 6, 7)], 
                       na.value = &amp;quot;transparent&amp;quot;,
                       name = &amp;quot;January precipitation (mm)&amp;quot;) + 
  coord_sf(xlim = c(-180, 180), ylim = c(-90, 90), expand = F) + 
  theme_bw(base_size = 13) +  
  theme(legend.position = &amp;quot;top&amp;quot;,
        legend.direction = &amp;quot;horizontal&amp;quot;,
        legend.key.width = unit(0.8, &amp;quot;in&amp;quot;),
        legend.title = element_text(hjust = -5, vjust = 0.75, size = 12),
        legend.text = element_text(size = 10),
        axis.text = element_text(color = &amp;quot;black&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file8682f013e7_files/figure-html/unnamed-chunk-2-1.png" width="80%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="change-the-map-projection"&gt;Change the map projection&lt;/h3&gt;
&lt;p&gt;To change the map projection, we need to transform the CRS of the
SpatRaster object for the precipitation using the function
&lt;code&gt;project()&lt;/code&gt; from the package &lt;code&gt;terra&lt;/code&gt; as well as
the sf object for the country boundaries using the function
&lt;code&gt;st_transform()&lt;/code&gt; from the package &lt;code&gt;sf&lt;/code&gt;. In this
example, we’ll use the Robinson projection (ESRI:54030). Moreover,
because of the new projection, the lon-lat lines and labels can be a
little messy and hard to control. To deal with this, we can manually add
the lines and labels to the map as additional geom layers. Basically, we
create a set of lon-lat coordinates where we would like the grid lines
to be drawn as well as a dataframe specifying the axis labels and
positions. We then convert these into sf objects and add them to the
map. (This method is inspired by this &lt;a
href="https://stackoverflow.com/questions/77216826/preserve-axis-labels-in-geom-sf-when-changing-projection"&gt;stack
overflow solution&lt;/a&gt;!)&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(sf)

### Transform map projection
terraOptions(progress = 0)  # hide the progress bar
january_precipitation_raster_robinson &amp;lt;- project(worldclim_precipitation_raster[[1]], &amp;quot;ESRI:54030&amp;quot;)  # ESRI:54030 for Robinson projection
country_boundary_robinson &amp;lt;- st_transform(country_boundary, crs = &amp;quot;ESRI:54030&amp;quot;)

### Create sf objects for the long-lat lines and latitude labels
# longitude lines
lon_lines &amp;lt;- lapply(c(-180, -120, -60, 0, 60, 120, 180), function(x) {cbind(x, seq(-90, 90, 1))})

# latitude lines
lat_lines &amp;lt;- lapply(c(-90, -60, -30, 0, 30, 60, 90), function(x) {cbind(seq(-180, 180, 1), x)})

# an sf object for the long-lat lines 
grid_lines &amp;lt;- st_sf(geometry = st_sfc(st_multilinestring(x = append(lon_lines, lat_lines)), crs = &amp;quot;WGS84&amp;quot;))

# an sf objects for the latitude labels
lat &amp;lt;- c(-90, -60, -30, 0, 30, 60, 90)
lat_labels &amp;lt;- data.frame(label = str_glue(&amp;quot;{abs(lat)} °{if_else(lat == 0, &amp;#39;&amp;#39;, if_else(lat &amp;lt; 0, &amp;#39;S&amp;#39;, &amp;#39;N&amp;#39;))}&amp;quot;),
                         lon = -180,
                         lat = lat) %&amp;gt;% 
  st_as_sf(., coords = c(&amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;), crs = &amp;quot;WGS84&amp;quot;)

### Make the map
ggplot() +
  geom_spatraster(data = january_precipitation_raster_robinson) +
  geom_sf(data = country_boundary_robinson, fill = NA, color = &amp;quot;black&amp;quot;, size = 0.8) + 
  geom_sf(data = grid_lines, linewidth = 0.1, color = &amp;quot;grey&amp;quot;) +  # add grid lines
  geom_sf_text(data = lat_labels, aes(label = label), size = 3,  # add latitude labels
               nudge_x = c(-2e6, -1.5e6, -1.3e6, -1e6, -1.3e6, -1.5e6, -2e6)) +  # need to adjust the amount of nudging depending on the specific map projection used
  scale_fill_gradientn(colors = col_pal[c(1, 4, 6, 7)], 
                       na.value = &amp;quot;transparent&amp;quot;,
                       name = &amp;quot;January precipitation (mm)&amp;quot;) + 
  theme_minimal() +
  coord_sf(expand = F,
           crs = &amp;quot;ESRI:54030&amp;quot;,
           clip = &amp;quot;off&amp;quot;) +
  theme(legend.position = &amp;quot;top&amp;quot;,
        legend.direction = &amp;quot;horizontal&amp;quot;,
        legend.key.width = unit(0.8, &amp;quot;in&amp;quot;),
        legend.title = element_text(hjust = -5, vjust = 0.75, size = 12),
        legend.text = element_text(size = 10),
        panel.border = element_blank(),
        plot.background = element_blank(),
        panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.text = element_text(color = &amp;quot;black&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file8682f013e7_files/figure-html/unnamed-chunk-3-1.png" width="80%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="create-a-choropheth-map-of-mean-precipitation-by-country"&gt;Create
a choropheth map of mean precipitation by country&lt;/h3&gt;
&lt;p&gt;The package &lt;code&gt;terra&lt;/code&gt; has a suite of functions for
geospatial computation. A useful one is &lt;code&gt;extract()&lt;/code&gt;, which
extracts cell values from SpatRaster layers based on a set of vector
locations (points, lines, or polygons) and summarizes the extracted
values (min, max, mean, length, etc.).&lt;/p&gt;
&lt;p&gt;Below, we’ll extract the cell values from the January precipitation
SpatRaster based on the country boundary polygons and calculate the mean
precipitation for each country. We’ll then add the country means to the
same country boundary object and make a choropleth map.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Summarize mean precipitation by country
january_precipitation_country_mean &amp;lt;- extract(worldclim_precipitation_raster[[1]],  # the SpatRaster to extract cell values from
                                              country_boundary,  # the vector polygons to define the zones
                                              fun = mean,  # the summary function 
                                              na.rm = T) %&amp;gt;% 
  rename(mean_precipitation = `wc2.1_2.5m_prec_01`)

### Add country means to the country boundary sf object
january_precipitation_country_mean_sf &amp;lt;- bind_cols(country_boundary_robinson, january_precipitation_country_mean)
  
### Make the choropleth map
ggplot() +
  geom_sf(data = january_precipitation_country_mean_sf, aes(fill = mean_precipitation), color = &amp;quot;black&amp;quot;, size = 0.8) + 
  geom_sf(data = grid_lines, linewidth = 0.1, color = &amp;quot;grey&amp;quot;) +  
  geom_sf_text(data = lat_labels, aes(label = label), size = 3,
               nudge_x = c(-2e6, -1.5e6, -1.3e6, -1e6, -1.3e6, -1.5e6, -2e6)) +
  scale_fill_gradientn(colors = col_pal[c(1, 4, 6, 7)], 
                       na.value = &amp;quot;transparent&amp;quot;,
                       name = &amp;quot;January precipitation (mm)&amp;quot;) + 
  theme_minimal() +
  coord_sf(expand = F,
           crs = &amp;quot;ESRI:54030&amp;quot;,
           clip = &amp;quot;off&amp;quot;) +
  theme(legend.position = &amp;quot;top&amp;quot;,
        legend.direction = &amp;quot;horizontal&amp;quot;,
        legend.key.width = unit(0.8, &amp;quot;in&amp;quot;),
        legend.title = element_text(hjust = -5, vjust = 0.75, size = 12),
        legend.text = element_text(size = 10),
        panel.border = element_blank(),
        plot.background = element_blank(),
        panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.text = element_text(color = &amp;quot;black&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file8682f013e7_files/figure-html/unnamed-chunk-4-1.png" width="80%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="create-an-animation-of-monthly-average"&gt;Create an animation of
monthly average&lt;/h3&gt;
&lt;p&gt;Remember we have 12 SpatRaster objects in
“worldclim_precipitation_raster”. We can create a map for each and turn
them into an animation to explore the temporal patterns of world
precipitation. We’ll simply loop through each month and make a map for
it, just like what we did for January. This gives us a list of 12 maps.
We can then use the functions from the package (&lt;code&gt;magick&lt;/code&gt;)[&lt;a
href="https://cran.r-project.org/web/packages/magick/vignettes/intro.html"
class="uri"&gt;https://cran.r-project.org/web/packages/magick/vignettes/intro.html&lt;/a&gt;]
to make an animation of those maps.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Create a map for each month
p_world_precipitation_by_month &amp;lt;- map(1:12, function(x) { 
  
  # SpatRaster for each month
  monthly_precipitation_raster &amp;lt;- worldclim_precipitation_raster[[x]]
  
  # name of precipitation layer
  monthly_precipitation_raster_layer &amp;lt;- names(monthly_precipitation_raster)
  
  # set the max precipitation to 1,000 mm (for a better color visualization)
  monthly_precipitation_raster &amp;lt;- monthly_precipitation_raster %&amp;gt;% 
    mutate(!!monthly_precipitation_raster_layer := if_else(!!sym(monthly_precipitation_raster_layer) &amp;gt;= 1000, 
                                                           1000, 
                                                           !!sym(monthly_precipitation_raster_layer)))

  # change map projection
  terraOptions(progress = 0)
  monthly_precipitation_raster_robinson &amp;lt;- project(monthly_precipitation_raster, &amp;quot;ESRI:54030&amp;quot;)
  
  # name of month
  month_name &amp;lt;- month.name[x]

  # map
  p &amp;lt;- ggplot() +
    geom_spatraster(data = monthly_precipitation_raster_robinson) +
    geom_sf(data = country_boundary_robinson, fill = NA, color = &amp;quot;black&amp;quot;, size = 0.8) + 
    geom_sf(data = grid_lines, linewidth = 0.1, color = &amp;quot;grey&amp;quot;) + 
    geom_sf_text(data = lat_labels, aes(label = label), size = 3, 
                 nudge_x = c(-2e6, -1.5e6, -1.3e6, -1e6, -1.3e6, -1.5e6, -2e6)) +
    scale_fill_gradientn(colors = c(&amp;quot;#ffffd9&amp;quot;, &amp;quot;#238443&amp;quot;, &amp;quot;#41b6c4&amp;quot;, &amp;quot;#225ea8&amp;quot;, &amp;quot;#253494&amp;quot;, &amp;quot;#54278f&amp;quot;, &amp;quot;#3f007d&amp;quot;, &amp;quot;#980043&amp;quot;, &amp;quot;#980043&amp;quot;),
                         limits = c(0, 1000),
                         breaks = c(0, 250, 500, 750, 1000),
                         labels = c(&amp;quot;0 mm&amp;quot;, &amp;quot;250 mm&amp;quot;, &amp;quot;500 mm&amp;quot;, &amp;quot;750 mm&amp;quot;, &amp;quot;&amp;gt; 1,000 mm&amp;quot;),
                         na.value = &amp;quot;transparent&amp;quot;,
                         name = NULL) +
    theme_minimal() +
    labs(title = month_name) + 
    coord_sf(expand = F,
             crs = &amp;quot;ESRI:54030&amp;quot;,
             clip = &amp;quot;off&amp;quot;) +
    theme(legend.position = &amp;quot;top&amp;quot;,
          legend.direction = &amp;quot;horizontal&amp;quot;,
          legend.key.width = unit(0.8, &amp;quot;in&amp;quot;),
          legend.title = element_text(hjust = -5, vjust = 0.75, size = 12),
          legend.text = element_text(size = 10),
          panel.border = element_blank(),
          plot.background = element_blank(),
          panel.grid = element_blank(),
          plot.title = element_text(hjust = 0.51, size = 13, vjust = 0),
          axis.title = element_blank(),
          axis.text = element_text(color = &amp;quot;black&amp;quot;))
  
  return(p)
  
})

### Make the animation
library(magick)

# create a Magick image object
image &amp;lt;- image_graph(width = 1350, height = 900, res = 200)

# display the maps on the plotting device
out &amp;lt;- lapply(1:12, function(x) {
  
  p &amp;lt;- p_world_precipitation_by_month[[x]]
  print(p)
  
})

# close the plotting device
dev.off()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;png 
  2 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;# animate the images
animation &amp;lt;- image_animate(image, fps = 2, optimize = T)
animation&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="../file8682f013e7_files/figure-html/unnamed-chunk-5-1.gif" width="80%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;To recap, we learned how to create raster maps from GeoTIFF files in
ggplot. We first created a basic raster map of world precipitation using
the packages &lt;code&gt;terra&lt;/code&gt; and &lt;code&gt;tidyterra&lt;/code&gt;. Next, we
modified the map by changing the map projection and customizing the grid
lines and axis labels. We also did some basic manipulations of the
raster data by calculating the average precipitation in each country and
created a choropleth map for it. Finally, we made a map for each of the
12 months and turned them into an animation using the package
&lt;code&gt;magick&lt;/code&gt;. Raster data are quite common, especially when it
comes to geospatial analysis. Having some “raster” skills under your
belt will certainly go a long way!&lt;/p&gt;
&lt;p&gt;Hope you learn something useful from this post and don’t forget to
leave your comments and suggestions below if you have any!&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>f28439450dd313b3f1f56133d747852a</distill:md5>
      <category>2025</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2025-05-05-post-41-ggplot-map-series-no7-spatial-raster-mapping-in-ggplot</guid>
      <pubDate>Mon, 05 May 2025 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2025-05-05-post-41-ggplot-map-series-no7-spatial-raster-mapping-in-ggplot/../../homepage_images/Post41.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>Post #40. Mathematical expressions in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2025-03-28-post-40-math-expressions-in-ggplots</link>
      <description>Come and learn some quick tips for adding mathematical expressions in ggplots!</description>
      <category>2025</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2025-03-28-post-40-math-expressions-in-ggplots</guid>
      <pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2025-03-28-post-40-math-expressions-in-ggplots/../../homepage_images/Post40.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Post #39. Lay them out—arranging multiple ggplots with `patchwork`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2025-01-24-post-39-lay-them-out-arranging-multiple-ggplots-with-patchwork</link>
      <description>


&lt;!-- Webpage style --&gt;
&lt;style&gt;
d-article a {
  color: #2780e3 !important;
  border-bottom: none !important;
}

d-article a:hover {
  color: #2780e3 !important;
  border-bottom: 2px solid !important;
}

d-byline {
  margin-left: -10% !important;
}

d-title {
  margin-left: -10%;
}

d-title h1 {
  font-size: 45px;
  width: 130%;
}

d-article {
  margin-left: -10%;
}

p {
  width: 120%;
}

d-article h2 {
  width: 120%;
}

d-article h3 {
  width: 120%;
  font-size: 28px;
}

div.article-footer{
  width: 120%;
}

d-article div.sourceCode { 
  width: 120% !important;
}

d-article pre { 
  width: 120% !important;
}

div.l-body {
  width: 120% !important;
}

d-article table thead tr {
  height: 60px !important;
  width: 210px !important;
}

d-article table thead th {
  height: 60px !important;
  font-size: 22px !important;
  width: 210px !important;
}

d-article table tbody tr td {
  font-size: 21px !important;
  height: 60px !important;
  text-align: center !important;
  width: 210px !important;
}

div.l-body img {
  margin-right: 30% !important;
}

d-article ol {
  width: 120% !important;
}

body &gt; d-article &gt; div:nth-child(54) &gt; p &gt; img {
  margin-right: 37.5% !important;
}

body &gt; d-article &gt; div:nth-child(58) &gt; img {
  margin-right: 15% !important;
}

body &gt; d-article &gt; div:nth-child(64) &gt; img {
  margin-right: 15% !important;
}

body &gt; d-article &gt; div:nth-child(80) &gt; p &gt; img {
  margin-right: 35% !important;
}

body &gt; d-article &gt; div:nth-child(84) &gt; img {
  margin-right: 15% !important;
}

body &gt; d-article &gt; div:nth-child(94) &gt; p &gt; img {
  margin-right: 35% !important;
}

&lt;/style&gt;
&lt;head&gt;
&lt;base target="_blank"&gt;
&lt;/head&gt;
&lt;!-- Start of the article --&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Welcome to the first post of 2025! I’m looking forward to writing
some interesting posts this year, and I’ll kick it off here with a handy
post: arranging multiple ggplots with the extension package
&lt;code&gt;patchwork&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Oftentimes, we have multiple related plots and we would like to
combine them into one single figure. The traditional way to do it is to
save the individual plots and manually merge them in other software
programs like PowerPoint. This method can be convenient; however, it is
not reproducible and we will need to redo everything again if we change
the component plots. A more “modern” way is to merge the plots in R and
output them as a single figure. If you do it in this way, then the next
time when you modify your component plots, the final figure will be
automatically updated. Also, you can avoid the hassle of aligning the
plots or adjusting the aspect ratios, and you will always get the exact
same output.&lt;/p&gt;
&lt;p&gt;There are several extension packages that can arrange multiple
ggplots. In fact, I’ve written a &lt;a
href="https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots/"&gt;post&lt;/a&gt;
on this topic a few years ago. In that post, I introduced two packages
&lt;code&gt;ggpubr&lt;/code&gt; and &lt;code&gt;cowplot&lt;/code&gt;. These two packages provide
basic functionality for plot arrangements, but in this follow-up post I
will dive deeper into a much more powerful package &lt;a
href="https://patchwork.data-imaginist.com/index.html"&gt;&lt;code&gt;patchwork&lt;/code&gt;&lt;/a&gt;.
Thanks to this awesome package, arranging multiple ggplots has become
easier than ever, especially when we want to make complex multipanel
figures!&lt;/p&gt;
&lt;p&gt;Get some plots on hand? Time to lay them out!&lt;/p&gt;
&lt;h2 id="arranging-multiple-ggplots-with-patchwork"&gt;Arranging multiple
ggplots with &lt;code&gt;patchwork&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;patchwork&lt;/code&gt; offers a wide variety of functions for
arranging and polishing multipanel figures. In the following sections,
I’ll walk you through them and show you some examples.&lt;/p&gt;
&lt;h3 id="plot-layout"&gt;1. Plot layout&lt;/h3&gt;
&lt;p&gt;Let’s start by creating some example plots:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(tidyverse)
library(patchwork)

### Create some example plots
p1 &amp;lt;- ggplot(iris) + 
  geom_point(aes(x = Sepal.Length, y = Sepal.Width))

p2 &amp;lt;- ggplot(iris) + 
  geom_point(aes(x = Sepal.Length, y = Sepal.Width, color = Species))

p3 &amp;lt;- ggplot(iris) + 
  geom_boxplot(aes(x = Species, y = Sepal.Length))

p4 &amp;lt;- ggplot(iris) + 
  geom_boxplot(aes(x = Species, y = Sepal.Length, fill = Species))&lt;/code&gt;&lt;/pre&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;p&gt;The simplest way to combine these plots is using “&lt;code&gt;+&lt;/code&gt;”:
this results in “plot packing” where the plots are arranged in a
grid-like fashion and the function will make the figure as close to a
square as possible.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Plot packing
p1 + p2 + p3 + p4&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-2-1.png" width="528" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 0.5em;"&gt;

&lt;/div&gt;
&lt;p&gt;Besides “&lt;code&gt;+&lt;/code&gt;”, we can use “&lt;code&gt;|&lt;/code&gt;” to stack the
plots horizontally and “&lt;code&gt;/&lt;/code&gt;” to stack the plots
vertically.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Horizontal stacking
p1 | p2 | p3 | p4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-3-1.png" width="864" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Vertical stacking
p1 / p2 / p3 / p4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-4-1.png" width="40%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;div style="height: 0.5em;"&gt;

&lt;/div&gt;
&lt;p&gt;When we have a mix of “&lt;code&gt;+&lt;/code&gt;”, “&lt;code&gt;|&lt;/code&gt;”, and
“&lt;code&gt;/&lt;/code&gt;”, “&lt;code&gt;+&lt;/code&gt;” goes first, then “&lt;code&gt;/&lt;/code&gt;”,
and finally “&lt;code&gt;|&lt;/code&gt;”. If we want to change the precedence, we
can use parentheses. Compared the following two figures:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Default precedence
p1 / p2 | p3 + p4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-5-1.png" width="90%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Indicate precedence with parentheses
p1 / (p2 | p3) + p4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-6-1.png" width="60%" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;p&gt;In the first specification (the default precedence), p3 and p4 are
packed first, then p1 and p2 are stacked vertically, and finally these
two composite plots are stacked horizontally to produce the final
figure. In the second specification, p2 and p3 are stacked horizontally
first, then the composite plot is packed with p4, and finally it is
vertically stacked with p1.&lt;/p&gt;
&lt;p&gt;When have multiple ggplots stored in a list, we can simply pass the
list to the function &lt;code&gt;wrap_plot()&lt;/code&gt;, which will pack all the
plots in the list. This is essentially the same as “p1 + p2 + … + pn”,
but it saves us the time of having to pull the individual plots out and
add “&lt;code&gt;+&lt;/code&gt;” between them.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### A list of ggplots
p_list &amp;lt;- list(p1, p2, p3, p4)

### Wrap the plots
wrap_plots(p_list)&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-7-1.png" width="576" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;p&gt;Now that we know the basics, let’s take a step further to change the
layout design using &lt;code&gt;plot_layout()&lt;/code&gt;, where we can specify the
number of rows/columns and their relative heights/widths. Moreover, we
can create extra white space by adding empty plots using
&lt;code&gt;plot_spacer()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Change the layout design and add empty plots
p1 + plot_spacer() + p2 + p3 + p4 + plot_layout(ncol = 2, widths = c(2, 1))&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-8-1.png" width="576" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;p&gt;Another way to specify the layout design is to use a matrix with
letters denoting different panels (“#” denotes white space):&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Create a layout matrix
layout_matrix &amp;lt;- &amp;quot;
#AA##CC#
BBBBDDDD
BBBBDDDD
&amp;quot;

p1 + p2 + p3 + p4 + plot_layout(design = layout_matrix)&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-9-1.png" width="80%" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;p&gt;Yet another way to specify the layout design is to create a set of
coordinates for the panels using &lt;code&gt;area()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Create a set of coordinates for the panels
layout_coord &amp;lt;- c(area(t = 1, b = 7, l = 1, r = 7),
                  area(t = 2, b = 6, l = 8, r = 12),
                  area(t = 3, b = 5, l = 13, r = 15))

p1 + p2 + p3 + plot_layout(design = layout_coord)&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-10-1.png" width="80%" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 0.8em;"&gt;

&lt;/div&gt;
&lt;p&gt;Phew, that’s a lot! We’re done with plot layout. Next, we’ll move on
to our second topic: plot alignment.&lt;/p&gt;
&lt;h3 id="plot-alignment"&gt;Plot alignment&lt;/h3&gt;
&lt;p&gt;A neat thing about &lt;code&gt;patchwork&lt;/code&gt; is that the plots are
automatically aligned by their panel borders:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Default plot alignment by panel borders
p1 / p2 / p3  # the legend of p2 takes up extra space&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-11-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;p&gt;However, this default behavior can sometimes be a bit troublesome
because the legend (like the one above) or long axis text will take up
extra space. To deal with this issue, we can use the function
&lt;code&gt;free()&lt;/code&gt; to “free” the plot from the alignment constraints.
There are three ways to realign the plots:&lt;/p&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;Free the panel border. This allows the panel border of the plot to
move freely, which is useful for aligning a mix of plots with and
without legends:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="r"&gt;&lt;code&gt;### 1. Free the right panel border of p2
p1 / free(p2, type = &amp;quot;panel&amp;quot;, side = &amp;quot;r&amp;quot;) / p3  # the right panel border of p2 is no longer forced to be aligned with those of p1 and p3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-12-1.png" width="403.2" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;ol start="2" style="list-style-type: decimal"&gt;
&lt;li&gt;Free the axis title. When we combine plots with different axis text
lengths, all the axis titles will be aligned with the farthest one,
leading to extra white space between axis text and title. We can adjust
this by freeing the axis title of the plot with extra white space so
that the title can come back to its original position:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Create a plot with long y-axis text
p2_long_axis_text &amp;lt;- p2 + scale_y_continuous(labels = ~ format(as.numeric(.x), nsmall = 5))

### Default alignment
p1 / p2_long_axis_text / p3  # extra white space between y-axis title and text in p1 and p3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-13-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### 2. Free the y-axis title of p1
free(p1, type = &amp;quot;label&amp;quot;, side = &amp;quot;l&amp;quot;) / p2_long_axis_text / p3  # no extra space between y-axis title and text in p1&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-13-2.png" width="480" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;ol start="3" style="list-style-type: decimal"&gt;
&lt;li&gt;Free the space. When the plots have legends or long axis text, we
can first create some extra empty space using &lt;code&gt;plot_spacer()&lt;/code&gt;
and free the plot so that the legend or long axis text can take up the
designated space:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Default alignment
p2 + plot_spacer() + p1 + p3  # the legend of p2 creates a space gap between p1 and p3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-14-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### 3. Free the space to the right of p2
free(p2, type = &amp;quot;space&amp;quot;, side = &amp;quot;r&amp;quot;) + plot_spacer() + p1 + p3  # now the legend of p2 can take up the white space created by plot_spacer()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-14-2.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;div style="height: 0.5em;"&gt;

&lt;/div&gt;
&lt;p&gt;Cool. This is a good segue into our third topic: legends and
axes.&lt;/p&gt;
&lt;h3 id="legends-and-axes"&gt;Legends and axes&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;patchwork&lt;/code&gt; provides some basic means for adjusting legend
positions. As we saw earlier, when we combine plots with and without
legends, it can lead to white gaps between panels. A solution to this is
to collect and place all the legends on the right using the argument
“guides = ‘collect’” in &lt;code&gt;plot_layout()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Place the legends on the right
p1 + p3 + p2 + p4 + plot_layout(guides = &amp;quot;collect&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-15-1.png" width="528" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;p&gt;A useful feature of this argument is that the duplicates will be
removed automatically when there are multiple same legends:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Duplicate legends are removed
p1 + p3 + p2 + p2 + plot_layout(guides = &amp;quot;collect&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-16-1.png" width="528" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;p&gt;We can also use &lt;code&gt;guide_area()&lt;/code&gt; to create a designated area
for the legend(s):&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Create a designated area for the legend(s)
p1 + p3 + p2 + guide_area() + plot_layout(guides = &amp;quot;collect&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-17-1.png" width="480" style="display: block; margin: auto;" /&gt;
&lt;div style="height: 1em;"&gt;

&lt;/div&gt;
&lt;p&gt;Similar to legends, for plots that share the same axes, we can remove
duplicate title and text using the argument “axes = ‘collect’” or
“axis_titles = ‘collect’” in &lt;code&gt;plot_layout()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Remove duplicate axis title and text
p1 + p2 + p3 + p4 + plot_layout(axes = &amp;quot;collect&amp;quot;)  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-18-1.png" width="528" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Remove duplicate axis title only
p1 + p2 + p3 + p4 + plot_layout(axis_titles = &amp;quot;collect&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-18-2.png" width="528" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="text-annotations"&gt;Text annotations&lt;/h3&gt;
&lt;p&gt;We can add a title, a subtitle, a caption, and panel tags to the
patchwork figure using the function &lt;code&gt;plot_annotation()&lt;/code&gt;. The
text appearance can be adjusted via the “theme =” argument:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;### Add a title, a subtitle, a caption, and tag labels
p1 + p2 + p3 + p4 + 
  plot_annotation(title = &amp;quot;This is a patchwork figure&amp;quot;,
                  subtitle = &amp;quot;There are four panels&amp;quot;,
                  caption = &amp;quot;Dataset: iris&amp;quot;,
                  tag_levels = c(&amp;quot;a&amp;quot;),  # there are several built-in tag labels available
                  tag_prefix = &amp;quot;(&amp;quot;,
                  tag_suffix = &amp;quot;)&amp;quot;,
                  theme = theme(plot.title = element_text(size = 15, hjust = 0.5),
                                plot.subtitle = element_text(size = 12),
                                plot.caption = element_text(face = &amp;quot;italic&amp;quot;),
                                plot.tag.position = c(0.1, 1),
                                plot.tag = element_text(size = 13, hjust = 0)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-19-1.png" width="576" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h3 id="inset-plots"&gt;Inset plots&lt;/h3&gt;
&lt;p&gt;The last (but certainly not least) thing we can do is to add an inset
plot to the figure. This can easily be done via the function
&lt;code&gt;inset_element()&lt;/code&gt;. Just pass the inset plot to the function
and specify the desired location (using the relative coordinates from 0
to 1), and you’re all set!&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;p1 + inset_element(p3, top = 0.95, bottom = 0.55, left = 0.55, right = 0.95)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file868bf1fe2_files/figure-html/unnamed-chunk-20-1.png" width="480" style="display: block; margin: auto;" /&gt;&lt;/p&gt;
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;To summarize what we did, we first learned several ways to arrange
multiple ggplots. We then learned how to adjust plot alignments and
modify legends and axes. Finally, we learned how to add text annotations
and inset plots. &lt;code&gt;patchwork&lt;/code&gt; is such a handy package that I
use it all the time when combining ggplots. I believe you will join me
after reading this post!&lt;/p&gt;
&lt;p&gt;Hope you learn something useful from this post and don’t forget to
leave your comments and suggestions below if you have any!&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>1fe4e9e890866e6029e4d002f4937be0</distill:md5>
      <category>2025</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2025-01-24-post-39-lay-them-out-arranging-multiple-ggplots-with-patchwork</guid>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2025-01-24-post-39-lay-them-out-arranging-multiple-ggplots-with-patchwork/../../homepage_images/Post39.png" medium="image" type="image/png" width="1152" height="960"/>
    </item>
    <item>
      <title>Post #38. Creating ternary plots with `ggtern`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-12-20-post-38-creating-ternary-plots-with-ggtern</link>
      <description>Come and learn some useful tips for creating ternary plots in ggplot!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-12-20-post-38-creating-ternary-plots-with-ggtern</guid>
      <pubDate>Tue, 24 Dec 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-12-20-post-38-creating-ternary-plots-with-ggtern/../../homepage_images/Post38.png" medium="image" type="image/png" width="960" height="768"/>
    </item>
    <item>
      <title>Post #37. ggplot Map Series No.6: Cartograms in ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-10-08-post-37-ggplot-map-series-no6-cartograms-in-ggplots</link>
      <description>Come and learn how to create cartograms in ggplot!</description>
      <category>2024</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-10-08-post-37-ggplot-map-series-no6-cartograms-in-ggplots</guid>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-10-08-post-37-ggplot-map-series-no6-cartograms-in-ggplots/../../homepage_images/Post37.png" medium="image" type="image/png" width="1344" height="864"/>
    </item>
    <item>
      <title>Post #36. The nitty-gritty of dodging in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-08-02-post-36-the-nitty-gritty-of-dodging-in-ggplots</link>
      <description>Here come the useful tips for dodging in ggplots!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-08-02-post-36-the-nitty-gritty-of-dodging-in-ggplots</guid>
      <pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-08-02-post-36-the-nitty-gritty-of-dodging-in-ggplots/../../homepage_images/Post36.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>Post #35. Creating 3D plots with plotly and rayshader</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-07-03-post-35-creating-3d-plots-with-plotly</link>
      <description>Bring your plots to the next dimension with `plotly` and `rayshader`!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-07-03-post-35-creating-3d-plots-with-plotly</guid>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-07-03-post-35-creating-3d-plots-with-plotly/../../homepage_images/Post35.png" medium="image" type="image/png" width="900" height="700"/>
    </item>
    <item>
      <title>Post #34. Connecting paired points in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-06-11-post-34-connecting-paired-points-by-groups-in-ggplots</link>
      <description>Check out the handy tips for connecting paired points in ggplots!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-06-11-post-34-connecting-paired-points-by-groups-in-ggplots</guid>
      <pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-06-11-post-34-connecting-paired-points-by-groups-in-ggplots/../../homepage_images/Post34.png" medium="image" type="image/png" width="1344" height="768"/>
    </item>
    <item>
      <title>Post #33. A "timely" plot—Visualizing time series data in ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2024-02-21-post-33-a-timely-plotvisualizing-time-series-in-ggplots</link>
      <description>Let's create an awesome time series chart in ggplot!</description>
      <category>2024</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2024-02-21-post-33-a-timely-plotvisualizing-time-series-in-ggplots</guid>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2024-02-21-post-33-a-timely-plotvisualizing-time-series-in-ggplots/../../homepage_images/Post33.png" medium="image" type="image/png" width="1728" height="672"/>
    </item>
    <item>
      <title>Post #32. ggplot Map Series No.5: Scale bar and north arrow with `ggsn`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-12-24-post-32-ggplot-map-series-no5-map-annotation-with-ggsn</link>
      <description>Enhance your map with a scale bar and a north arrow using the package `ggsn`!</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-12-24-post-32-ggplot-map-series-no5-map-annotation-with-ggsn</guid>
      <pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-12-24-post-32-ggplot-map-series-no5-map-annotation-with-ggsn/../../homepage_images/Post32.png" medium="image" type="image/png" width="672" height="672"/>
    </item>
    <item>
      <title>Post #31. From static to dynamic—Create ggplot animations by hand</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-12-09-post-31-from-static-to-dynamic-animations-in-ggplots</link>
      <description>Read more here to bring your plots alive!</description>
      <category>2023</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-12-09-post-31-from-static-to-dynamic-animations-in-ggplots</guid>
      <pubDate>Sat, 09 Dec 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-12-09-post-31-from-static-to-dynamic-animations-in-ggplots/../../homepage_images/Post31.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>Post #30. ggplot Map Series No.4: Google Maps in R with `ggmap`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-10-26-post-30-ggplot-map-series-no4-creating-maps-with-ggmap</link>
      <description>A quick three-minute post on creating maps using Google Maps tiles with the package `ggmap`.</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-10-26-post-30-ggplot-map-series-no4-creating-maps-with-ggmap</guid>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-10-26-post-30-ggplot-map-series-no4-creating-maps-with-ggmap/../../homepage_images/Post30.png" medium="image" type="image/png" width="1152" height="1152"/>
    </item>
    <item>
      <title>Post #29. Bad weather today—Creating raincloud plots in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-09-09-post-29-creating-raincloud-plots-in-ggplots</link>
      <description>Come and learn how to create raincloud plots in ggplots to make your data "shine"!</description>
      <category>2023</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-09-09-post-29-creating-raincloud-plots-in-ggplots</guid>
      <pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-09-09-post-29-creating-raincloud-plots-in-ggplots/../../homepage_images/Post29.png" medium="image" type="image/png" width="864" height="960"/>
    </item>
    <item>
      <title>Post #28. Adding an external image to ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-08-22-post-28-adding-images-to-ggplots</link>
      <description>Come and learn four different ways of adding an external image to ggplots to decorate your figure!</description>
      <category>2023</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-08-22-post-28-adding-images-to-ggplots</guid>
      <pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-08-22-post-28-adding-images-to-ggplots/../../homepage_images/Post28.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #27. ggplot Map Series No.3: Visualizing the veins of Taiwan in ggplots with `osmdata`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-07-31-post-27-ggplot-map-series-no3-the-veins-of-taiwan</link>
      <description>In this post, we will create a map of the rivers in Taiwan in ggplots using the package `osmdata`.</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-07-31-post-27-ggplot-map-series-no3-the-veins-of-taiwan</guid>
      <pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-07-31-post-27-ggplot-map-series-no3-the-veins-of-taiwan/../../homepage_images/Post27.png" medium="image" type="image/png" width="710" height="518"/>
    </item>
    <item>
      <title>Post #26. ggplot Map Series No.2: Creating simple feature ggplot maps from shapefiles</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-05-24-post-26-ggplot-map-series-no2-simple-feature-maps</link>
      <description>Come and take a look at the nuts and bolts of creating simple feature maps from external shapefiles in ggplots!</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-05-24-post-26-ggplot-map-series-no2-simple-feature-maps</guid>
      <pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-05-24-post-26-ggplot-map-series-no2-simple-feature-maps/../../homepage_images/Post26.png" medium="image" type="image/png" width="729" height="768"/>
    </item>
    <item>
      <title>Post #25. ggplot Map Series No.1: Creating polygon maps in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-03-09-post-25-ggplot-map-series-no1-basic-ggplot-maps</link>
      <description>In this post, you will learn about how to create basic polygon maps and choropleth maps in ggplots.</description>
      <category>2023</category>
      <category>Map Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-03-09-post-25-ggplot-map-series-no1-basic-ggplot-maps</guid>
      <pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-03-09-post-25-ggplot-map-series-no1-basic-ggplot-maps/../../homepage_images/Post25.png" medium="image" type="image/png" width="1536" height="960"/>
    </item>
    <item>
      <title>Post #24. The spark between gt and ggplot2: Visualizing the top ten bird-window collision species in Taiwan</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-02-18-post-24-gt-and-ggplot-visualizing-bwc-in-taiwan</link>
      <description>An awesome integration of `gt` and `ggplot2` tells the story of the top ten bird-window collision species in Taiwan!</description>
      <category>2023</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-02-18-post-24-gt-and-ggplot-visualizing-bwc-in-taiwan</guid>
      <pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-02-18-post-24-gt-and-ggplot-visualizing-bwc-in-taiwan/../../homepage_images/Post24.png" medium="image" type="image/png" width="1934" height="3334"/>
    </item>
    <item>
      <title>Post #23. ggplot Legend Tips Series No.8: The nuts and bolts of legend item spacing</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2023-01-13-post-23-ggplot-legend-tips-series-no8-legend-item-spacing</link>
      <description>Here are all the nuts and bolts you need for working on legend item spacing!</description>
      <category>2023</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2023-01-13-post-23-ggplot-legend-tips-series-no8-legend-item-spacing</guid>
      <pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2023-01-13-post-23-ggplot-legend-tips-series-no8-legend-item-spacing/../../homepage_images/Post23.png" medium="image" type="image/png" width="1152" height="768"/>
    </item>
    <item>
      <title>Post #22. An epic ggplot journey through the glowing solar system</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-11-02-post-22-the-glowing-solar-system</link>
      <description>Ready for an epic ggplot journey through the glowing solar system? Let's go!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-11-02-post-22-the-glowing-solar-system</guid>
      <pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-11-02-post-22-the-glowing-solar-system/../../homepage_images/Post22.png" medium="image" type="image/png" width="1728" height="1728"/>
    </item>
    <item>
      <title>Post #21. Useful tips for mapping color and fill aesthetic in the same geom layer</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-10-22-post-21-useful-tips-for-mapping-color-and-fill-aesthetics-in-the-same-geom-layer</link>
      <description>In this quick post, I will show you how to use color and fill aesthetic together in the same geom layer to achieve the desired outcome!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-10-22-post-21-useful-tips-for-mapping-color-and-fill-aesthetics-in-the-same-geom-layer</guid>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-10-22-post-21-useful-tips-for-mapping-color-and-fill-aesthetics-in-the-same-geom-layer/../../homepage_images/Post21.png" medium="image" type="image/png" width="1152" height="768"/>
    </item>
    <item>
      <title>Post #20. ggplot Legend Tips Series No.7: Working on legends with theme()</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-10-01-post-20-ggplot-legend-tips-series-no7-working-on-legends-with-theme</link>
      <description>In this post, you will learn how to modify the appearance of ggplot legends using the arguments in `theme()`.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-10-01-post-20-ggplot-legend-tips-series-no7-working-on-legends-with-theme</guid>
      <pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-10-01-post-20-ggplot-legend-tips-series-no7-working-on-legends-with-theme/../../homepage_images/Post20.png" medium="image" type="image/png" width="1344" height="768"/>
    </item>
    <item>
      <title>Post #19. Go with the flow - alluvial diagrams in ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-09-10-post-19-go-with-the-flow-alluvial-plots-with-ggplot</link>
      <description>Let's make flowy alluvial diagrams in ggplot using the extension package `ggalluvial`!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-09-10-post-19-go-with-the-flow-alluvial-plots-with-ggplot</guid>
      <pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-09-10-post-19-go-with-the-flow-alluvial-plots-with-ggplot/../../homepage_images/Post19.png" medium="image" type="image/png" width="1536" height="864"/>
    </item>
    <item>
      <title>Post #18. Bump charts with ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-08-01-post-18-bump-charts-with-ggplot</link>
      <description>Come and learn how to create nice bump charts with ggplot!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-08-01-post-18-bump-charts-with-ggplot</guid>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-08-01-post-18-bump-charts-with-ggplot/../../homepage_images/Post18.png" medium="image" type="image/png" width="1728" height="960"/>
    </item>
    <item>
      <title>Post #17. ggplot Legend Tips Series No.6: Working on continuous legends with scale_XX functions</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-07-02-post-17-ggplot-legend-tips-series-no6-working-on-continuous-legends-with-scalexx-functions</link>
      <description>In this post, you will learn how to modify the appearance of continuous legends in ggplots using `scale_XX` family of functions.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-07-02-post-17-ggplot-legend-tips-series-no6-working-on-continuous-legends-with-scalexx-functions</guid>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-07-02-post-17-ggplot-legend-tips-series-no6-working-on-continuous-legends-with-scalexx-functions/../../homepage_images/Post17.png" medium="image" type="image/png" width="960" height="672"/>
    </item>
    <item>
      <title>Post #16. ggplot Legend Tips Series No.5: Working on discrete legends with scale_XX functions</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-06-09-post-16-ggplot-legend-tips-series-no5-working-on-discrete-legends-with-scalexx-functions</link>
      <description>In this post, you will learn how to modify the appearance of discrete legends in ggplots using `scale_XX` family of functions.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-06-09-post-16-ggplot-legend-tips-series-no5-working-on-discrete-legends-with-scalexx-functions</guid>
      <pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-06-09-post-16-ggplot-legend-tips-series-no5-working-on-discrete-legends-with-scalexx-functions/../../homepage_images/Post16.png" medium="image" type="image/png" width="1152" height="672"/>
    </item>
    <item>
      <title>Post #15. Manipulating the axes for individual facets with `tidytext` and `ggh4x`</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-05-12-post-15-manipulating-axis-scales-for-individual-facets</link>
      <description>Bothered by the hassle of manipulating the axes for individual facets? This is the post for you!</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-05-12-post-15-manipulating-axis-scales-for-individual-facets</guid>
      <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-05-12-post-15-manipulating-axis-scales-for-individual-facets/../../homepage_images/Post15.png" medium="image" type="image/png" width="960" height="768"/>
    </item>
    <item>
      <title>Post #14. Multiple color scales in one ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-04-24-post-14-multiple-color-scales-in-one-ggplot</link>
      <description>Using different color scales for multiple geom layers in one ggplot with `ggnewscale` and `relayer`</description>
      <category>2022</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-04-24-post-14-multiple-color-scales-in-one-ggplot</guid>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-04-24-post-14-multiple-color-scales-in-one-ggplot/../../homepage_images/Post14.png" medium="image" type="image/png" width="1056" height="672"/>
    </item>
    <item>
      <title>Post #13. ggplot Legend Tips Series No.4: Merging ggplot legends</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-03-02-post-13-ggplot-legend-tips-series-no4-merging-ggplot-legends</link>
      <description>Come and learn two handy tips to merge two ggplot legends into one!</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-03-02-post-13-ggplot-legend-tips-series-no4-merging-ggplot-legends</guid>
      <pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-03-02-post-13-ggplot-legend-tips-series-no4-merging-ggplot-legends/../../homepage_images/Post13.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #12. ggplot Legend Tips Series No.3: Three ways to turn off the legends in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-02-05-post-12-ggplot-legend-tips-series-no3-three-ways-to-turn-off-ggplot-legends</link>
      <description>Come and learn three handy tips to turn off the legends in ggplots!</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-02-05-post-12-ggplot-legend-tips-series-no3-three-ways-to-turn-off-ggplot-legends</guid>
      <pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-02-05-post-12-ggplot-legend-tips-series-no3-three-ways-to-turn-off-ggplot-legends/../../homepage_images/Post12.png" medium="image" type="image/png" width="768" height="576"/>
    </item>
    <item>
      <title>Post #11. ggplot Legend Tips Series No.2: Working on continuous legends with guides()</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-02-01-post-11-ggplot-legend-tips-series-no2-working-on-continuous-legends-with-guides</link>
      <description>In this post, you will learn how to tweak the appearance of continuous legends in ggplots with `guides()`.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-02-01-post-11-ggplot-legend-tips-series-no2-working-on-continuous-legends-with-guides</guid>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-02-01-post-11-ggplot-legend-tips-series-no2-working-on-continuous-legends-with-guides/../../homepage_images/Post11.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #10. ggplot Legend Tips Series No.1: Working on discrete legends with guides()</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2022-01-28-post-10-ggplot-legend-tips-series-no1-working-on-discrete-scale-legends-with-guides</link>
      <description>In this post, you will learn how to tweak the appearance of discrete legends in ggplots with `guides()`.</description>
      <category>2022</category>
      <category>Legend Tips Series</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2022-01-28-post-10-ggplot-legend-tips-series-no1-working-on-discrete-scale-legends-with-guides</guid>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2022-01-28-post-10-ggplot-legend-tips-series-no1-working-on-discrete-scale-legends-with-guides/../../homepage_images/Post10.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #9. Arrange multiple ggplots on one graphic device</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots</link>
      <description>Come and learn two methods to arrange multiple ggplots on one graphic device.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots</guid>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-12-20-post-9-arrange-multiple-ggplots/../../homepage_images/Post9.png" medium="image" type="image/png" width="1152" height="1152"/>
    </item>
    <item>
      <title>Post #8. Pokemon phylogeny with ggdendro</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro</link>
      <description>Create a Pokemon phylogenetic tree in ggplot with the extension package ggdendro.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro</guid>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-10-01-post-8-pokemon-phylogeny-with-ggdendro/../../homepage_images/Post8.png" medium="image" type="image/png" width="960" height="960"/>
    </item>
    <item>
      <title>Post #7. Customize the axis scales for individual ggplot facets</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets</link>
      <description>Come and learn how to customize the axis scales (axis limits, tick breaks, and tick labels) for individual ggplot facets!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets</guid>
      <pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-09-11-post-7-customize-the-axis-scales-for-individual-facets/../../homepage_images/Post7.png" medium="image" type="image/png" width="1152" height="768"/>
    </item>
    <item>
      <title>Post #6. Play good music for your data - violin plots with ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot</link>
      <description>Visualize data distributions using violin plots with ggplot.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot</guid>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-08-02-post-6-play-good-music-for-your-data-violin-plots-with-ggplot/../../homepage_images/Post6.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #5. Awesome text displays with ggtext</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext</link>
      <description>Enhance text displays in your ggplots with the extension package ggtext!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext</guid>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-07-10-post-5-awesome-text-display-with-ggtext/../../homepage_images/Post5.png" medium="image" type="image/png" width="1152" height="1152"/>
    </item>
    <item>
      <title>Post #4. Consistent colors of the same factor levels across figures</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures</link>
      <description>In this post, I will show you a simple trick to keep the colors of the same factor levels consistent across different ggplot figures.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures</guid>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-06-26-post-4-consistent-colors-of-the-same-factor-levels-across-figures/../../homepage_images/Post4.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #3. Pie charts with ggplot</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot</link>
      <description>Want to know how to create effective pie charts with ggplot? Dig in to learn more!</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot</guid>
      <pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-06-18-post-3-pie-charts-with-ggplot/../../homepage_images/Post3.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Guest Post #1. Communicating the ESSENCE of your data</title>
      <dc:creator>William Ou</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data</link>
      <description>Visualizing multi-dimensional and dynamic data can be challenging. In this post, I will show how you can better communicate these features with interactive plots and animations.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data</guid>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-26-guest-post-1-communicating-the-essence-of-your-data/../../homepage_images/Guest_post1.gif" medium="image" type="image/gif"/>
    </item>
    <item>
      <title>Post #2. Three ways to create log axes in ggplots: which one should you use?</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use</link>
      <description>This post shows you three different ways to create log axes in ggplots and provides some suggestions on which method to use for your figures.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use</guid>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-07-post-2-three-ways-to-create-log-axes-in-ggplots-which-one-should-you-use/../../homepage_images/Post2.png" medium="image" type="image/png" width="960" height="576"/>
    </item>
    <item>
      <title>Post #1. Center long legend titles in ggplots</title>
      <dc:creator>Gen-Chang Hsu</dc:creator>
      <link>https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots</link>
      <description>In this post, I will show you a simple quick hack to center long legend titles in ggplots without bothering gtables and grobs.</description>
      <category>2021</category>
      <guid>https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots</guid>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <media:content url="https://genchanghsu.github.io/ggGallery/posts/2021-05-01-post-1-center-long-legend-titles-in-ggplots/../../homepage_images/Post1.png" medium="image" type="image/png" width="1152" height="672"/>
    </item>
  </channel>
</rss>
